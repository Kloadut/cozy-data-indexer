import tornado
from handlers.base import BaseHandler

import logging
logger = logging.getLogger('cozy-data-system.' + __name__)

# ID generator. TODO move to an helpler module.
import string
import random
def id_generator(size=42, chars=string.ascii_uppercase + string.digits):
    return ''.join(random.choice(chars) for x in range(size))



class VersionHandler(BaseHandler):
    '''
    Return current version of Data system.
    '''

    def get(self):
        self.write("Cozy Data System v0.1.0")

class ExistsHandler(BaseHandler):
    '''
    Check existence of an object with given id and type.
    '''
    
    @tornado.web.asynchronous
    def post(self):
        dataType = self.get_field("dataType")
        _id = self.get_field("id")
        self.db.connection(collectionname=dataType) \
               .find_one({'_id': _id}, 
                         callback=self._on_response)

    def _on_response(self, response, error):
        if error:
            raise tornado.web.HTTPError(500)
        
        if len(response):
            self.write({ "exists": True })
        else:
            self.write({ "exists": False })
        self.finish()


class CreateHandler(BaseHandler):
    '''
    Create a new object from sent data. Object must contain at least a 
    *dataType* field. ID is generated by data system.
    '''

    @tornado.web.asynchronous
    def post(self):
        dataType = self.get_field("dataType")
        doc = self.request.arguments
        doc["_id"] = id_generator()
    
        self.db.connection(collectionname=dataType) \
               .save(doc, 
                       callback=self.async_callback(self._on_response, doc=doc))

    def _on_response(self, response, error, doc):
        if error:
            raise tornado.web.HTTPError(500)
        
        self.write(doc)
        self.set_status(201)
        self.finish()


